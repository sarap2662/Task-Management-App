{"ast":null,"code":"var _jsxFileName = \"/Users/sarap/Documents/UNLV/Task-Management-App/frontend/task/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // Optional: for custom styles\nimport backgroundImage from \"images/notepad4.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentItems, setCurrentItems] = useState([]);\n  const [completedItems, setCompletedItems] = useState([]);\n  const [newItem, setNewItem] = useState(\"\");\n  const addItem = () => {\n    if (newItem.trim()) {\n      setCurrentItems([...currentItems, newItem.trim()]);\n      setNewItem(\"\");\n    }\n  };\n  const moveItem = (item, fromList, toList, setFromList, setToList) => {\n    setFromList(fromList.filter(i => i !== item));\n    setToList([...toList, item]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        id: \"current-items\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Current Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"item-list\",\n          children: currentItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => moveItem(item, currentItems, completedItems, setCurrentItems, setCompletedItems),\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        id: \"completed-items\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"item-list\",\n          children: completedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => moveItem(item, completedItems, currentItems, setCompletedItems, setCurrentItems),\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newItem,\n        onChange: e => setNewItem(e.target.value),\n        placeholder: \"Enter new item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pHL+YmxkIcetUZCNeCB/0y/GUWg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","backgroundImage","jsxDEV","_jsxDEV","App","_s","currentItems","setCurrentItems","completedItems","setCompletedItems","newItem","setNewItem","addItem","trim","moveItem","item","fromList","toList","setFromList","setToList","filter","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","index","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/sarap/Documents/UNLV/Task-Management-App/frontend/task/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\"; // Optional: for custom styles\nimport backgroundImage from \"images/notepad4.jpg\";\n\nconst App = () => {\n  const [currentItems, setCurrentItems] = useState([]);\n  const [completedItems, setCompletedItems] = useState([]);\n  const [newItem, setNewItem] = useState(\"\");\n\n  const addItem = () => {\n    if (newItem.trim()) {\n      setCurrentItems([...currentItems, newItem.trim()]);\n      setNewItem(\"\");\n    }\n  };\n\n  const moveItem = (item, fromList, toList, setFromList, setToList) => {\n    setFromList(fromList.filter((i) => i !== item));\n    setToList([...toList, item]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Task Manager</h1>\n      <div className=\"container\">\n        <div className=\"column\" id=\"current-items\">\n          <h2>Current Tasks</h2>\n          <ul className=\"item-list\">\n            {currentItems.map((item, index) => (\n              <li\n                key={index}\n                onClick={() =>\n                  moveItem(\n                    item,\n                    currentItems,\n                    completedItems,\n                    setCurrentItems,\n                    setCompletedItems\n                  )\n                }\n              >\n                {item}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"column\" id=\"completed-items\">\n          <h2>Completed Tasks</h2>\n          <ul className=\"item-list\">\n            {completedItems.map((item, index) => (\n              <li\n                key={index}\n                onClick={() =>\n                  moveItem(\n                    item,\n                    completedItems,\n                    currentItems,\n                    setCompletedItems,\n                    setCurrentItems\n                  )\n                }\n              >\n                {item}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"form-group\">\n        <input\n          type=\"text\"\n          value={newItem}\n          onChange={(e) => setNewItem(e.target.value)}\n          placeholder=\"Enter new item\"\n        />\n        <button onClick={addItem}>Add Item</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}